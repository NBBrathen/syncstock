name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: syncstock
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: syncstock_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      env:
        DATABASE_URL: postgresql://syncstock:testpassword@localhost:5432/syncstock_test
        SECRET_KEY: test-secret-key-for-ci
        ALGORITHM: HS256
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
      run: |
        pytest tests/ -v --tb=short

    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://syncstock:testpassword@localhost:5432/syncstock_test
        SECRET_KEY: test-secret-key-for-ci
        ALGORITHM: HS256
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
      run: |
        pytest tests/ --cov=app --cov-report=term-missing --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: github.event_name == 'push'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
      continue-on-error: true

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort

    - name: Check code formatting with Black
      run: black --check app/ tests/
      continue-on-error: true

    - name: Check imports with isort
      run: isort --check-only app/ tests/
      continue-on-error: true

    - name: Lint with flake8
      run: flake8 app/ tests/ --max-line-length=120 --extend-ignore=E203,W503
      continue-on-error: true